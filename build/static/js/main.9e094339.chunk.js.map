{"version":3,"sources":["services/api.service.js","services/movie.service.js","commons/helper.js","features/nav/NavBar/NavBar.jsx","features/movie/MovieList/MovieListItem.jsx","features/movie/MovieList/MovieList.jsx","features/movie/MovieDetail/MovieDetail.jsx","features/nav/FooterNav/FooterNav.jsx","app/layout/App.jsx","serviceWorker.js","index.js"],"names":["ErrorService","errorType","errorCode","message","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","constructor","Error","ApiService","_401interceptor","_reqInterceptor","init","baseURL","axios","defaults","setHeader","headers","common","removeHeader","get","resource","post","data","put","delete","customRequest","handlingError","error","console","log","request","status","MovieService","getBy","_getBy","asyncToGenerator","regenerator_default","a","mark","_callee","id","response","wrap","_context","prev","next","concat","sent","abrupt","t0","stop","_x","apply","arguments","_get","_callee2","_context2","results","find","_find","_callee3","param","requestData","_context3","url","params","search","_x2","swall","type","msg","length","undefined","callback","confirmation","swallOption","title","text","showCancelButton","confirmButtonText","cancelButtonText","showCloseButton","swal","fire","then","result","value","emptyInput","NavBar","state","isOpen","input","toggle","setState","onInputChange","evt","newInput","target","searchSubmit","preventDefault","redirect","props","history","push","str","res","movies","pathname","detail","react_default","createElement","Navbar","color","dark","expand","fixed","Container","NavbarBrand","href","className","onClick","Collapse","navbar","Nav","Form","onSubmit","InputGroup","size","Input","onChange","placeholder","Button","Component","MovieListItem","movie","imgMovie","toLowerCase","replace","segmentUri","split","Col","xs","sm","md","lg","src","alt","director","react_router_dom","to","MovieList","isLoading","getMovies","_this$state","Row","noGutters","map","movie_MovieList_MovieListItem","key","episode_id","LoadingOverlay_default","active","spinner","MovieDetail","coverMovie","match","_this2","getMovie","producer","release_date","opening_crawl","FooterNav","App","nav_NavBar_NavBar","react_router","exact","path","component","nav_FooterNav_FooterNav","Boolean","window","location","hostname","process","rootElement","document","getElementById","ReactDOM","render","layout_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oWAEMA,cACJ,SAAAA,EAAaC,EAAWC,EAAWC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,IAC1CI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAL,GAAAU,KAAAH,KAAMJ,KACDQ,KAAOP,EAAKQ,YAAYD,KAC7BP,EAAKD,QAAUA,EACfC,EAAKH,UAAYA,EACjBG,EAAKF,UAAYA,EALyBE,yCADnBS,QAoEZC,EA1DI,CACjBC,gBAAiB,KACjBC,gBAAiB,KAEjBC,KAJiB,SAIXC,GACJC,IAAMC,SAASF,QAAUA,GAG3BG,UARiB,WASfF,IAAMC,SAASE,QAAQC,OAAO,gBAAkB,mBAChDJ,IAAMC,SAASE,QAAQC,OAAvB,OAA0C,oBAG5CC,aAbiB,WAcfL,IAAMC,SAASE,QAAQC,OAAS,IAGlCE,IAjBiB,SAiBZC,GACH,OAAOP,IAAMM,IAAIC,IAGnBC,KArBiB,SAqBXD,EAAUE,GACd,OAAOT,IAAMQ,KAAKD,EAAUE,IAG9BC,IAzBiB,SAyBZH,EAAUE,GACb,OAAOT,IAAMU,IAAIH,EAAUE,IAG7BE,OA7BiB,SA6BTJ,GACN,OAAOP,IAAMW,OAAOJ,IActBK,cA5CiB,SA4CFH,GACb,OAAOT,IAAMS,IAGfI,cAhDiB,SAgDFC,GAEb,MADAC,QAAQC,IAAIF,EAAM9B,SACd8B,EAAMG,QAAQC,OAAS,EACnB,IAAIrC,EAAa,UAAWiC,EAAMG,QAAQC,OAAQJ,EAAM9B,SAExD,IAAIH,EAAa,QAASiC,EAAMG,QAAQC,OAAQJ,EAAM9B,WChBnDmC,EA/CM,CACnBC,MAAK,eAAAC,EAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,EAAAC,EAAAC,KAAE,SAAAC,EAAgBC,GAAhB,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBrC,EAAWW,IAAX,UAAA2B,OAAyBN,IAF7C,UAGqB,OADlBC,EAFHE,EAAAI,MAGUhB,OAHV,CAAAY,EAAAE,KAAA,eAAAF,EAAAK,OAAA,SAIMP,EAASnB,MAJf,aAOGmB,EAPH,OAAAE,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SASHnC,EAAWkB,cAAXiB,EAAAM,IATG,yBAAAN,EAAAO,SAAAX,EAAA,iBAAF,gBAAAY,GAAA,OAAAjB,EAAAkB,MAAAnD,KAAAoD,YAAA,GAaLlC,IAAG,eAAAmC,EAAAvD,OAAAoC,EAAA,EAAApC,CAAAqC,EAAAC,EAAAC,KAAE,SAAAiB,IAAA,IAAAd,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEsBrC,EAAWW,IAAI,WAFrC,UAGuB,OADlBsB,EAFLe,EAAAT,MAGYhB,OAHZ,CAAAyB,EAAAX,KAAA,eAAAW,EAAAR,OAAA,SAIQP,EAASnB,KAAKmC,SAJtB,aAOKhB,EAPL,OAAAe,EAAAZ,KAAA,EAAAY,EAAAP,GAAAO,EAAA,SASDhD,EAAWkB,cAAX8B,EAAAP,IATC,yBAAAO,EAAAN,SAAAK,EAAA,iBAAF,yBAAAD,EAAAF,MAAAnD,KAAAoD,YAAA,GAaHK,KAAI,eAAAC,EAAA5D,OAAAoC,EAAA,EAAApC,CAAAqC,EAAAC,EAAAC,KAAE,SAAAsB,EAAeC,GAAf,IAAAC,EAAArB,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cACEiB,EAAc,CAClBE,IAAK,SACLC,OAAQ,CACNC,OAAQL,IAJRE,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAQqBrC,EAAWiB,cAAcqC,GAR9C,UASsB,OADlBrB,EARJsB,EAAAhB,MASWhB,OATX,CAAAgC,EAAAlB,KAAA,eAAAkB,EAAAf,OAAA,SAUOP,EAASnB,KAAKmC,SAVrB,aAaIhB,EAbJ,QAAAsB,EAAAnB,KAAA,GAAAmB,EAAAd,GAAAc,EAAA,SAeFvD,EAAWkB,cAAXqC,EAAAd,IAfE,yBAAAc,EAAAb,SAAAU,EAAA,kBAAF,gBAAAO,GAAA,OAAAR,EAAAP,MAAAnD,KAAAoD,YAAA,qBC3BC,SAASe,EAAOC,GAAgD,IAA1CC,EAA0CjB,UAAAkB,OAAA,QAAAC,IAAAnB,UAAA,GAAAA,UAAA,GAApC,GAAIoB,EAAgCpB,UAAAkB,OAAA,EAAAlB,UAAA,QAAAmB,EAAtBE,EAAsBrB,UAAAkB,OAAA,QAAAC,IAAAnB,UAAA,IAAAA,UAAA,GAC/DsB,EAAc,GACpBA,EAAYC,MAAkB,WAATP,EAAqB,oBAAsB,YAChEM,EAAYE,KAAOP,EACnBK,EAAYN,KAAOA,EAEfK,IACFC,EAAYG,kBAAmB,EAC/BH,EAAYI,kBAAoB,KAChCJ,EAAYK,iBAAmB,QAC/BL,EAAYM,iBAAkB,GAGhCC,IAAKC,KAAKR,GAAaS,KAAK,SAAAC,GACtBA,EAAOC,OACLb,GAAUA,sFCDdc,EAAa,CACjBrB,OAAQ,IA4EKsB,6MAxEbC,MAAQ,CACNC,QAAQ,EACRC,MAAOJ,KAGTK,OAAS,WACP9F,EAAK+F,SAAS,CACZH,QAAS5F,EAAK2F,MAAMC,YAsBxBI,cAAgB,SAACC,GACf,IAAMC,EAAWlG,EAAK2F,MAAME,MAC5BK,EAASD,EAAIE,OAAO5F,MAAQ0F,EAAIE,OAAOX,MACvCxF,EAAK+F,SAAS,CACZF,MAAOK,OAIXE,aAAe,SAACH,GACdA,EAAII,iBACJrG,EAAK+F,SAAS,CACZO,UAAU,IAGZtG,EAAKuG,MAAMC,QAAQC,KAAK,4HAhCVC,kGAEMxE,EAAa0B,KAAK8C,UAA9BC,SACNxG,KAAK4F,SAAS,CACZa,OAAQD,IAEVxG,KAAKoG,MAAMC,QAAQC,KAAK,CACtBI,SAAU,WACVlB,MAAO,CAAEmB,OAAQH,qDAIf9D,EAAAM,cAAavD,GACf0E,EAAMzB,EAAAM,GAAEtD,UAAWgD,EAAAM,GAAEpD,sJAuBzB,IAAM8F,EAAQ1F,KAAKwF,MAEnB,OADA7D,QAAQC,IAAI8D,GAEVkB,EAAAxE,EAAAyE,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAKC,MAAM,OAC1CN,EAAAxE,EAAAyE,cAACM,EAAA,EAAD,KACEP,EAAAxE,EAAAyE,cAACO,EAAA,EAAD,CAAaC,KAAK,KAAIT,EAAAxE,EAAAyE,cAAA,cAAtB,OACAD,EAAAxE,EAAAyE,cAAA,UAAQS,UAAU,MAAMC,QAASvH,KAAK2F,QACpCiB,EAAAxE,EAAAyE,cAAA,KAAGS,UAAU,wBAEfV,EAAAxE,EAAAyE,cAACW,EAAA,EAAD,CAAU/B,OAAQzF,KAAKwF,MAAMC,OAAQgC,QAAM,GACzCb,EAAAxE,EAAAyE,cAACa,EAAA,EAAD,CAAKJ,UAAU,UAAUG,QAAM,GAC7Bb,EAAAxE,EAAAyE,cAACc,EAAA,EAAD,CAAMC,SAAU5H,KAAKiG,cACnBW,EAAAxE,EAAAyE,cAACgB,EAAA,EAAD,CAAYC,KAAK,MACflB,EAAAxE,EAAAyE,cAACkB,EAAA,EAAD,CAAOT,UAAU,oBAAoBlH,KAAK,SAAS4H,SAAUhI,KAAK6F,cAAeR,MAAOK,EAAMzB,OAAQgE,YAAY,iBAClHrB,EAAAxE,EAAAyE,cAACqB,EAAA,EAAD,CAAQJ,KAAK,KAAKR,UAAU,kBAA5B,uBA9DGa,uCCaNC,0LA1BJ,IACCC,EAAUrI,KAAKoG,MAAfiC,MACFC,EAAW,kBAAoBD,EAAM1D,MAAM4D,cAAcC,QAAQ,MAAM,IAAM,OAC7EC,EAAaJ,EAAMtE,IAAI2E,MAAM,KAEnC,OACE9B,EAAAxE,EAAAyE,cAAC8B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIzB,UAAU,QACzCV,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,WAAWD,KAAK,MAC7BT,EAAAxE,EAAAyE,cAAA,OAAKmC,IAAKV,EAAUW,IAAI,MAAM3B,UAAU,iBACxCV,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,mBACbV,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,iBACbV,EAAAxE,EAAAyE,cAAA,MAAIS,UAAU,kBAAkBe,EAAM1D,OACtCiC,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,iBAAiBe,EAAMa,WAExCtC,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,kBACbV,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,uBACbV,EAAAxE,EAAAyE,cAACsC,EAAA,EAAD,CAAMC,GAAE,UAAAvG,OAAY4F,EAAW,IAAMnB,UAAU,yBAA/C,uBAjBYa,+BCgDbkB,6MA7Cb7D,MAAQ,CACNiB,OAAQ,GACR6C,WAAW,qNAKSvH,EAAab,aAAzBsF,SACNxG,KAAK4F,SAAS,CACZa,OAAQD,EACR8C,WAAW,oDAGT5G,EAAAM,cAAavD,GACf0E,EAAMzB,EAAAM,GAAEtD,UAAWgD,EAAAM,GAAEpD,gKAMzBI,KAAKuJ,6CAGE,IAAAC,EACuBxJ,KAAKwF,MAA3BiB,EADD+C,EACC/C,OAAQ6C,EADTE,EACSF,UAChB,OACE1C,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,QACbV,EAAAxE,EAAAyE,cAAC4C,EAAA,EAAD,KACE7C,EAAAxE,EAAAyE,cAAC8B,EAAA,EAAD,KACE/B,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,cACbV,EAAAxE,EAAAyE,cAAA,MAAIS,UAAU,oBAAd,qBAEFV,EAAAxE,EAAAyE,cAAC4C,EAAA,EAAD,CAAKC,WAAW,EAAMpC,UAAU,SAC7Bb,EAAOkD,IAAI,SAACtB,GACX,OAAOzB,EAAAxE,EAAAyE,cAAC+C,EAAD,CAAeC,IAAKxB,EAAMyB,WAAYzB,MAAOA,QAI1DzB,EAAAxE,EAAAyE,cAACkD,EAAA3H,EAAD,CAAgB4H,OAAQV,EAAWW,SAAO,EAACrF,KAAK,+BAvClCuD,aCwDT+B,6MAxDb1E,MAAQ,CACN6C,MAAO,GACP8B,WAAY,GACZb,WAAW,oNAKQtF,EAAahE,KAAKoG,MAA3BgE,MAASpG,gBACCjC,EAAaC,MAAMgC,EAAOzB,WAAtCiE,SACNxG,KAAK4F,SAAS,CACZyC,MAAO7B,EACP2D,WAAY,kBAAoB3D,EAAI7B,MAAM4D,cAAcC,QAAQ,MAAM,IAAM,OAC5Ec,WAAW,oDAGT5G,EAAAM,cAAavD,GACf0E,EAAMzB,EAAAM,GAAEtD,UAAWgD,EAAAM,GAAEpD,QAAS,WAC5ByK,EAAKjE,MAAMC,QAAQC,KAAK,8JAO9BtG,KAAKsK,4CAGE,IAAAd,EACkCxJ,KAAKwF,MAAtC6C,EADDmB,EACCnB,MAAO8B,EADRX,EACQW,WAAYb,EADpBE,EACoBF,UAC3B,OACE1C,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,QACbV,EAAAxE,EAAAyE,cAAC4C,EAAA,EAAD,KACE7C,EAAAxE,EAAAyE,cAAC8B,EAAA,EAAD,CAAKC,GAAG,KAAKE,GAAG,KACdlC,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,iBAAiB0B,IAAKmB,EAAYlB,IAAI,iBAEvDrC,EAAAxE,EAAAyE,cAAC8B,EAAA,EAAD,CAAKC,GAAG,KAAKE,GAAG,KACdlC,EAAAxE,EAAAyE,cAAA,WAAMwB,EAAMa,UACZtC,EAAAxE,EAAAyE,cAAA,UAAKwB,EAAM1D,OACXiC,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,oBACbV,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,yBACbV,EAAAxE,EAAAyE,cAAA,KAAGS,UAAU,cAAb,aADF,IAC2Ce,EAAMkC,UAEjD3D,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,oBACbV,EAAAxE,EAAAyE,cAAA,KAAGS,UAAU,cAAb,iBADF,IAC+Ce,EAAMmC,eAGvD5D,EAAAxE,EAAAyE,cAAA,SAAIwB,EAAMoC,gBAEZ7D,EAAAxE,EAAAyE,cAACkD,EAAA3H,EAAD,CAAgB4H,OAAQV,EAAWW,SAAO,EAACrF,KAAK,+BAlDhCuD,aCYXuC,0LAZX,OACE9D,EAAAxE,EAAAyE,cAAC4C,EAAA,EAAD,KACE7C,EAAAxE,EAAAyE,cAAC8B,EAAA,EAAD,CAAKC,GAAG,MACNhC,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,aACbV,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,oBAAf,aAA8CV,EAAAxE,EAAAyE,cAAA,cAA9C,wCAPYsB,cCqBTwC,mLAfX,OACE/D,EAAAxE,EAAAyE,cAAA,WACED,EAAAxE,EAAAyE,cAAA,OAAKS,UAAU,OACbV,EAAAxE,EAAAyE,cAAC+D,EAAD,MACAhE,EAAAxE,EAAAyE,cAACM,EAAA,EAAD,CAAWG,UAAU,QACnBV,EAAAxE,EAAAyE,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjCzC,EAAAxE,EAAAyE,cAACgE,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWd,IACpCtD,EAAAxE,EAAAyE,cAACoE,EAAD,gBATM9C,aCIE+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,iECRN7J,EAAWG,KAAK4K,wBAChB,IAAMC,EAAcC,SAASC,eAAe,QAG1CC,IAASC,OACP/E,EAAAxE,EAAAyE,cAACsC,EAAA,EAAD,KACEvC,EAAAxE,EAAAyE,cAAC+E,EAAD,OAEJL,GD+GI,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAM5G,KAAK,SAAA6G,GACjCA,EAAaC","file":"static/js/main.9e094339.chunk.js","sourcesContent":["import axios from 'axios'\n\nclass ErrorService extends Error {\n  constructor (errorType, errorCode, message) {\n    super(message)\n    this.name = this.constructor.name\n    this.message = message\n    this.errorType = errorType\n    this.errorCode = errorCode\n  }\n}\n\nconst ApiService = {\n  _401interceptor: null,\n  _reqInterceptor: null,\n\n  init (baseURL) {\n    axios.defaults.baseURL = baseURL\n  },\n\n  setHeader () {\n    axios.defaults.headers.common['Content-Type'] = 'application/json'\n    axios.defaults.headers.common['Accept'] = 'application/json'\n  },\n\n  removeHeader () {\n    axios.defaults.headers.common = {}\n  },\n\n  get (resource) {\n    return axios.get(resource)\n  },\n\n  post (resource, data) {\n    return axios.post(resource, data)\n  },\n\n  put (resource, data) {\n    return axios.put(resource, data)\n  },\n\n  delete (resource) {\n    return axios.delete(resource)\n  },\n\n  /**\n     * Perform a custom Axios request.\n     *\n     * data is an object containing the following properties:\n     *  - method\n     *  - url\n     *  - data ... request payload\n     *  - auth (optional)\n     *    - username\n     *    - password\n    **/\n  customRequest (data) {\n    return axios(data)\n  },\n\n  handlingError (error) {\n    console.log(error.message)\n    if (error.request.status > 0) {\n      throw new ErrorService('warning', error.request.status, error.message)\n    } else {\n      throw new ErrorService('error', error.request.status, error.message)\n    }\n  }\n}\n\nexport default ApiService\nexport { ApiService, ErrorService }\n","import ApiService from './api.service'\n\nconst MovieService = {\n  getBy: async function (id) {\n    try {\n      const response = await ApiService.get(`/films/${id}`)\n      if (response.status === 200) {\n        return response.data\n      }\n\n      throw response\n    } catch (error) {\n      ApiService.handlingError(error)\n    }\n  },\n\n  get: async function () {\n    try {\n      const response = await ApiService.get('/films/')\n      if (response.status === 200) {\n        return response.data.results\n      }\n\n      throw response\n    } catch (error) {\n      ApiService.handlingError(error)\n    }\n  },\n\n  find: async function(param) {\n    const requestData = {\n      url: '/films',\n      params: {\n        search: param\n      }\n    }\n    try {\n      const response = await ApiService.customRequest(requestData);\n      if (response.status === 200) {\n        return response.data.results;\n      }\n\n      throw response;\n    } catch (error) {\n      ApiService.handlingError(error);\n    }\n  }\n}\n\nexport default MovieService\n","import swal from 'sweetalert2'\n\nexport function swall (type, msg = '', callback, confirmation = false) {\n  const swallOption = {}\n  swallOption.title = (type === 'danger') ? 'Terjadi Kesalahan' : 'Perhatian'\n  swallOption.text = msg\n  swallOption.type = type\n\n  if (confirmation) {\n    swallOption.showCancelButton = true\n    swallOption.confirmButtonText = 'Ya'\n    swallOption.cancelButtonText = 'Batal'\n    swallOption.showCloseButton = true\n  }\n\n  swal.fire(swallOption).then(result => {\n    if (result.value) {\n      if (callback) callback()\n    }\n  })\n}","import React, { Component } from 'react';\nimport MovieService from '../../../services/movie.service';\nimport { ErrorService } from '../../../services/api.service';\nimport { swall } from '../../../commons/helper';\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  Form,\n  InputGroup,\n  Input,\n  Button\n} from 'reactstrap';\n\nconst emptyInput = {\n  search: ''\n}\n\nclass NavBar extends Component {\n  state = {\n    isOpen: false,\n    input: emptyInput\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  async findMovie(str) {\n    try {\n      const res = await MovieService.find(str);\n      this.setState({\n        movies: res\n      });\n      this.props.history.push({\n        pathname: '/movie/1',\n        state: { detail: res }\n      });\n      \n    } catch (e) {\n      if (e instanceof ErrorService) {\n        swall(e.errorType, e.message);\n      }\n    }\n  }\n\n  onInputChange = (evt) => {\n    const newInput = this.state.input;\n    newInput[evt.target.name] = evt.target.value;\n    this.setState({\n      input: newInput\n    });\n  }\n\n  searchSubmit = (evt) => {\n    evt.preventDefault();\n    this.setState({\n      redirect: true\n    })\n\n    this.props.history.push('/movie')\n  }\n\n  render() {\n    const input = this.state;\n    console.log(input)\n    return (\n      <Navbar color=\"dark\" dark expand=\"sm\" fixed=\"top\">\n        <Container>\n          <NavbarBrand href=\"/\"><b>M</b>uvi</NavbarBrand>\n          <button className=\"btn\" onClick={this.toggle}>\n            <i className=\"fa fa-search fa-fw\"></i>\n          </button>\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <Form onSubmit={this.searchSubmit}>\n                <InputGroup size=\"sm\">\n                  <Input className=\"form-control mr-2\" name=\"search\" onChange={this.onInputChange} value={input.search} placeholder=\"Search Movie\" />\n                  <Button size=\"sm\" className=\"btn btn-danger\">Search</Button>\n                </InputGroup>\n              </Form>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n        )\n      }\n    }\n    \nexport default NavBar;","import React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './MovieListItem.scss';\n\n\nclass MovieListItem extends Component {\n  render() {\n    const { movie } = this.props;\n    const imgMovie = '/assets/images/' + movie.title.toLowerCase().replace(/\\s/g,'') + '.jpg';\n    const segmentUri = movie.url.split('/');\n   \n    return ( \n      <Col xs=\"6\" sm=\"6\" md=\"4\" lg=\"3\" className=\"px-2\">\n        <div className=\"moviebox\" href=\"#1\">\n          <img src={imgMovie} alt=\"abc\" className=\"moviebox-img\" />\n          <div className=\"moviebox-shadow\">\n            <div className=\"moviebox-meta\">\n              <h1 className=\"moviebox-title\">{movie.title}</h1>\n              <div className=\"moviebox-desc\">{movie.director}</div>\n            </div>\n            <div className=\"moviebox-hover\">\n              <div className=\"moviebox-hover-meta\">\n                <Link to={`/movie/${segmentUri[5]}`} className=\"btn btn-outline-light\">Preview</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Col>\n    )\n  }\n}\n\nexport default MovieListItem","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport MovieListItem from './MovieListItem';\nimport MovieService from '../../../services/movie.service';\nimport { ErrorService } from '../../../services/api.service';\nimport { swall } from '../../../commons/helper';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass MovieList extends Component {\n  state = {\n    movies: [],\n    isLoading: true\n  }\n\n  async getMovies() {\n    try {\n      const res = await MovieService.get();\n      this.setState({\n        movies: res,\n        isLoading: false\n      });\n    } catch(e) {\n      if (e instanceof ErrorService) {\n        swall(e.errorType, e.message)\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getMovies()\n  }\n\n  render() {\n    const { movies, isLoading } = this.state;\n    return (  \n      <div className=\"py-5\">\n        <Row>\n          <Col>\n            <div className=\"subheading\">\n              <h1 className=\"subheading-title\">Star Wars Series</h1>\n            </div>\n            <Row noGutters={true} className=\"mx-n2\">\n              {movies.map((movie) => {\n                return <MovieListItem key={movie.episode_id} movie={movie}/>\n              })}\n            </Row>\n          </Col>\n          <LoadingOverlay active={isLoading} spinner text='Memuat halaman...'></LoadingOverlay>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default MovieList;","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { ErrorService } from '../../../services/api.service';\nimport MovieService from '../../../services/movie.service';\nimport { swall } from '../../../commons/helper';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass MovieDetail extends Component {\n  state = {\n    movie: {},\n    coverMovie: '',\n    isLoading: true\n  }\n\n  async getMovie() {\n    try {\n      const { match: { params } } = this.props;\n      const res = await MovieService.getBy(params.id);\n      this.setState({\n        movie: res,\n        coverMovie: '/assets/images/' + res.title.toLowerCase().replace(/\\s/g,'') + '.jpg',\n        isLoading: false\n      })\n    } catch (e) {\n      if (e instanceof ErrorService) {\n        swall(e.errorType, e.message, () => {\n          this.props.history.push('/')\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getMovie()\n  }\n\n  render() {\n    const { movie, coverMovie, isLoading } = this.state;\n    return (\n      <div className=\"py-5\">\n        <Row>\n          <Col xs=\"12\" md=\"4\">\n            <img className=\"img-fluid mb-3\" src={coverMovie} alt=\"Cover Movie\" />\n          </Col>\n          <Col xs=\"12\" md=\"8\">\n            <div>{movie.director}</div>\n            <h1>{movie.title}</h1>\n            <div className=\"list-inline mb-3\">\n              <div className=\"list-inline-item mr-3\">\n                <b className=\"text-white\">Producer:</b> {movie.producer}\n              </div>\n              <div className=\"list-inline-item\">\n                <b className=\"text-white\">Release Date:</b> {movie.release_date}\n              </div>\n            </div>\n            <p>{movie.opening_crawl}</p>\n          </Col>\n          <LoadingOverlay active={isLoading} spinner text='Memuat halaman...'></LoadingOverlay>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default MovieDetail;","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport './FooterNav.scss';\n\nclass FooterNav extends Component {\n\n  render() {\n    return (\n      <Row>\n        <Col xs=\"12\">\n          <div className=\"footernav\">\n            <div className=\"footernav-credit\">2019 &copy; <b>M</b>uvi - All Right Reserved. </div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default FooterNav;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport NavBar from '../../features/nav/NavBar/NavBar';\nimport MovieList from '../../features/movie/MovieList/MovieList';\nimport MovieDetail from '../../features/movie/MovieDetail/MovieDetail';\nimport FooterNav from '../../features/nav/FooterNav/FooterNav';\nimport { Container } from 'reactstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <NavBar/>\n          <Container className=\"mt-5\">\n            <Route exact path=\"/\" component={MovieList} />\n            <Route path=\"/movie/:id\" component={MovieDetail} />\n            <FooterNav/>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport ApiService from './services/api.service';\nimport './assets/scss/main.scss';\n\n// SOLVED: setup hot loader \nApiService.init(process.env.REACT_APP_BASE_API_URL);\nconst rootElement = document.getElementById('root');\n\nlet render = () => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>,\n  rootElement);\n}\n\nif (module.hot) {\n  module.hot.accept('./app/layout/App', () => {\n    setTimeout(render);\n  })\n}\n\nrender(); \n\n// SOLVED: disable react default reload\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}